
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AdminScalarFieldEnum = {
  id: 'id',
  username: 'username',
  email: 'email',
  password_hash: 'password_hash',
  role: 'role',
  created_at: 'created_at'
};

exports.Prisma.DeviceScalarFieldEnum = {
  id: 'id',
  device_id: 'device_id',
  serial_number: 'serial_number',
  model: 'model',
  brand: 'brand',
  os_version: 'os_version',
  enrolled_at: 'enrolled_at',
  last_seen: 'last_seen',
  battery_level: 'battery_level',
  network_status: 'network_status',
  status: 'status'
};

exports.Prisma.DeviceLocationScalarFieldEnum = {
  id: 'id',
  device_id: 'device_id',
  latitude: 'latitude',
  longitude: 'longitude',
  recorded_at: 'recorded_at'
};

exports.Prisma.PolicyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  allow_camera: 'allow_camera',
  allow_wifi: 'allow_wifi',
  allow_bluetooth: 'allow_bluetooth',
  require_password: 'require_password',
  kiosk_mode: 'kiosk_mode',
  created_at: 'created_at'
};

exports.Prisma.DevicePolicyScalarFieldEnum = {
  id: 'id',
  device_id: 'device_id',
  policy_id: 'policy_id',
  applied_at: 'applied_at'
};

exports.Prisma.CommandScalarFieldEnum = {
  id: 'id',
  device_id: 'device_id',
  admin_id: 'admin_id',
  command_type: 'command_type',
  payload: 'payload',
  status: 'status',
  created_at: 'created_at',
  executed_at: 'executed_at'
};

exports.Prisma.LogScalarFieldEnum = {
  id: 'id',
  device_id: 'device_id',
  admin_id: 'admin_id',
  event_type: 'event_type',
  message: 'message',
  created_at: 'created_at'
};

exports.Prisma.AppScalarFieldEnum = {
  id: 'id',
  name: 'name',
  package_name: 'package_name',
  version: 'version',
  source: 'source',
  download_url: 'download_url',
  created_at: 'created_at'
};

exports.Prisma.DeviceAppScalarFieldEnum = {
  id: 'id',
  device_id: 'device_id',
  app_id: 'app_id',
  status: 'status'
};

exports.Prisma.GroupScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  created_at: 'created_at'
};

exports.Prisma.DeviceGroupScalarFieldEnum = {
  id: 'id',
  device_id: 'device_id',
  group_id: 'group_id'
};

exports.Prisma.AlertScalarFieldEnum = {
  id: 'id',
  device_id: 'device_id',
  alert_type: 'alert_type',
  severity: 'severity',
  message: 'message',
  created_at: 'created_at',
  resolved: 'resolved'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.AdminOrderByRelevanceFieldEnum = {
  username: 'username',
  email: 'email',
  password_hash: 'password_hash'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.DeviceOrderByRelevanceFieldEnum = {
  device_id: 'device_id',
  serial_number: 'serial_number',
  model: 'model',
  brand: 'brand',
  os_version: 'os_version',
  network_status: 'network_status'
};

exports.Prisma.PolicyOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.LogOrderByRelevanceFieldEnum = {
  event_type: 'event_type',
  message: 'message'
};

exports.Prisma.AppOrderByRelevanceFieldEnum = {
  name: 'name',
  package_name: 'package_name',
  version: 'version',
  download_url: 'download_url'
};

exports.Prisma.GroupOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description'
};

exports.Prisma.AlertOrderByRelevanceFieldEnum = {
  message: 'message'
};
exports.Role = exports.$Enums.Role = {
  superadmin: 'superadmin',
  admin: 'admin'
};

exports.DeviceStatus = exports.$Enums.DeviceStatus = {
  active: 'active',
  locked: 'locked',
  wiped: 'wiped',
  kiosk: 'kiosk'
};

exports.CommandType = exports.$Enums.CommandType = {
  lock: 'lock',
  wipe: 'wipe',
  kiosk: 'kiosk',
  update_policy: 'update_policy',
  custom: 'custom'
};

exports.CommandStatus = exports.$Enums.CommandStatus = {
  pending: 'pending',
  sent: 'sent',
  executed: 'executed',
  failed: 'failed'
};

exports.AppSource = exports.$Enums.AppSource = {
  apk: 'apk',
  playstore: 'playstore'
};

exports.DeviceAppStatus = exports.$Enums.DeviceAppStatus = {
  pending: 'pending',
  installed: 'installed',
  failed: 'failed',
  removed: 'removed'
};

exports.AlertType = exports.$Enums.AlertType = {
  low_battery: 'low_battery',
  offline: 'offline',
  policy_violation: 'policy_violation',
  app_missing: 'app_missing',
  unauthorized_access: 'unauthorized_access'
};

exports.AlertSeverity = exports.$Enums.AlertSeverity = {
  info: 'info',
  warning: 'warning',
  critical: 'critical'
};

exports.Prisma.ModelName = {
  Admin: 'Admin',
  Device: 'Device',
  DeviceLocation: 'DeviceLocation',
  Policy: 'Policy',
  DevicePolicy: 'DevicePolicy',
  Command: 'Command',
  Log: 'Log',
  App: 'App',
  DeviceApp: 'DeviceApp',
  Group: 'Group',
  DeviceGroup: 'DeviceGroup',
  Alert: 'Alert'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\youan\\OneDrive\\Desktop\\Projet MDM Android\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\youan\\OneDrive\\Desktop\\Projet MDM Android\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Admin {\n  id            Int       @id @default(autoincrement())\n  username      String    @unique @db.VarChar(100)\n  email         String    @unique @db.VarChar(150)\n  password_hash String    @db.VarChar(255)\n  role          Role      @default(admin)\n  created_at    DateTime  @default(now()) @db.Timestamp(6)\n  commands      Command[]\n  logs          Log[]\n\n  @@map(\"admins\")\n}\n\nmodel Device {\n  id             Int              @id @default(autoincrement())\n  device_id      String           @unique @db.VarChar(255)\n  serial_number  String?          @db.VarChar(100)\n  model          String?          @db.VarChar(100)\n  brand          String?          @db.VarChar(100)\n  os_version     String?          @db.VarChar(50)\n  enrolled_at    DateTime         @default(now()) @db.Timestamp(6)\n  last_seen      DateTime?        @db.Timestamp(6)\n  battery_level  Int?\n  network_status String?          @db.VarChar(50)\n  status         DeviceStatus     @default(active)\n  locations      DeviceLocation[]\n  devicePolicies DevicePolicy[]\n  commands       Command[]\n  deviceApps     DeviceApp[]\n  deviceGroups   DeviceGroup[]\n  alerts         Alert[]\n  logs           Log[]\n\n  @@map(\"devices\")\n}\n\nmodel DeviceLocation {\n  id          Int      @id @default(autoincrement())\n  device_id   Int\n  device      Device   @relation(fields: [device_id], references: [id], onDelete: Cascade)\n  latitude    Decimal? @db.Decimal(10, 8)\n  longitude   Decimal? @db.Decimal(11, 8)\n  recorded_at DateTime @default(now()) @db.Timestamp(6)\n\n  @@map(\"device_locations\")\n}\n\nmodel Policy {\n  id               Int            @id @default(autoincrement())\n  name             String         @db.VarChar(100)\n  description      String?        @db.Text\n  allow_camera     Boolean        @default(true)\n  allow_wifi       Boolean        @default(true)\n  allow_bluetooth  Boolean        @default(true)\n  require_password Boolean        @default(false)\n  kiosk_mode       Boolean        @default(false)\n  created_at       DateTime       @default(now()) @db.Timestamp(6)\n  devicePolicies   DevicePolicy[]\n\n  @@map(\"policies\")\n}\n\nmodel DevicePolicy {\n  id         Int      @id @default(autoincrement())\n  device_id  Int\n  policy_id  Int\n  applied_at DateTime @default(now()) @db.Timestamp(6)\n  device     Device   @relation(fields: [device_id], references: [id], onDelete: Cascade)\n  policy     Policy   @relation(fields: [policy_id], references: [id], onDelete: Cascade)\n\n  @@map(\"device_policies\")\n}\n\nmodel Command {\n  id           Int           @id @default(autoincrement())\n  device_id    Int\n  admin_id     Int\n  command_type CommandType\n  payload      Json?\n  status       CommandStatus @default(pending)\n  created_at   DateTime      @default(now()) @db.Timestamp(6)\n  executed_at  DateTime?     @db.Timestamp(6)\n  device       Device        @relation(fields: [device_id], references: [id], onDelete: Cascade)\n  admin        Admin         @relation(fields: [admin_id], references: [id], onDelete: Cascade)\n\n  @@map(\"commands\")\n}\n\nmodel Log {\n  id         Int      @id @default(autoincrement())\n  device_id  Int?\n  admin_id   Int?\n  event_type String?  @db.VarChar(100)\n  message    String?  @db.Text\n  created_at DateTime @default(now()) @db.Timestamp(6)\n  device     Device?  @relation(fields: [device_id], references: [id], onDelete: SetNull)\n  admin      Admin?   @relation(fields: [admin_id], references: [id], onDelete: SetNull)\n\n  @@map(\"logs\")\n}\n\nmodel App {\n  id           Int         @id @default(autoincrement())\n  name         String      @db.VarChar(150)\n  package_name String      @db.VarChar(200)\n  version      String?     @db.VarChar(50)\n  source       AppSource   @default(apk)\n  download_url String?     @db.Text\n  created_at   DateTime    @default(now()) @db.Timestamp(6)\n  deviceApps   DeviceApp[]\n\n  @@map(\"apps\")\n}\n\nmodel DeviceApp {\n  id        Int             @id @default(autoincrement())\n  device_id Int\n  app_id    Int\n  status    DeviceAppStatus @default(pending)\n  device    Device          @relation(fields: [device_id], references: [id], onDelete: Cascade)\n  app       App             @relation(fields: [app_id], references: [id], onDelete: Cascade)\n\n  @@map(\"device_apps\")\n}\n\nmodel Group {\n  id           Int           @id @default(autoincrement())\n  name         String        @db.VarChar(100)\n  description  String?       @db.Text\n  created_at   DateTime      @default(now()) @db.Timestamp(6)\n  deviceGroups DeviceGroup[]\n\n  @@map(\"groups\")\n}\n\nmodel DeviceGroup {\n  id        Int    @id @default(autoincrement())\n  device_id Int\n  group_id  Int\n  device    Device @relation(fields: [device_id], references: [id], onDelete: Cascade)\n  group     Group  @relation(fields: [group_id], references: [id], onDelete: Cascade)\n\n  @@map(\"device_groups\")\n}\n\nmodel Alert {\n  id         Int           @id @default(autoincrement())\n  device_id  Int\n  alert_type AlertType\n  severity   AlertSeverity @default(info)\n  message    String?       @db.Text\n  created_at DateTime      @default(now()) @db.Timestamp(6)\n  resolved   Boolean       @default(false)\n  device     Device        @relation(fields: [device_id], references: [id], onDelete: Cascade)\n\n  @@map(\"alerts\")\n}\n\nenum Role {\n  superadmin\n  admin\n}\n\nenum DeviceStatus {\n  active\n  locked\n  wiped\n  kiosk\n}\n\nenum CommandType {\n  lock\n  wipe\n  kiosk\n  update_policy\n  custom\n}\n\nenum CommandStatus {\n  pending\n  sent\n  executed\n  failed\n}\n\nenum AppSource {\n  apk\n  playstore\n}\n\nenum DeviceAppStatus {\n  pending\n  installed\n  failed\n  removed\n}\n\nenum AlertType {\n  low_battery\n  offline\n  policy_violation\n  app_missing\n  unauthorized_access\n}\n\nenum AlertSeverity {\n  info\n  warning\n  critical\n}\n",
  "inlineSchemaHash": "1b0cf4d83ef9e21043b360c3c5f9d53928f738f780e4a9039042f3c489abbd5c",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Admin\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password_hash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"commands\",\"kind\":\"object\",\"type\":\"Command\",\"relationName\":\"AdminToCommand\"},{\"name\":\"logs\",\"kind\":\"object\",\"type\":\"Log\",\"relationName\":\"AdminToLog\"}],\"dbName\":\"admins\"},\"Device\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"device_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serial_number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"model\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"brand\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"os_version\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enrolled_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"last_seen\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"battery_level\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"network_status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"DeviceStatus\"},{\"name\":\"locations\",\"kind\":\"object\",\"type\":\"DeviceLocation\",\"relationName\":\"DeviceToDeviceLocation\"},{\"name\":\"devicePolicies\",\"kind\":\"object\",\"type\":\"DevicePolicy\",\"relationName\":\"DeviceToDevicePolicy\"},{\"name\":\"commands\",\"kind\":\"object\",\"type\":\"Command\",\"relationName\":\"CommandToDevice\"},{\"name\":\"deviceApps\",\"kind\":\"object\",\"type\":\"DeviceApp\",\"relationName\":\"DeviceToDeviceApp\"},{\"name\":\"deviceGroups\",\"kind\":\"object\",\"type\":\"DeviceGroup\",\"relationName\":\"DeviceToDeviceGroup\"},{\"name\":\"alerts\",\"kind\":\"object\",\"type\":\"Alert\",\"relationName\":\"AlertToDevice\"},{\"name\":\"logs\",\"kind\":\"object\",\"type\":\"Log\",\"relationName\":\"DeviceToLog\"}],\"dbName\":\"devices\"},\"DeviceLocation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"device_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"device\",\"kind\":\"object\",\"type\":\"Device\",\"relationName\":\"DeviceToDeviceLocation\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"recorded_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"device_locations\"},\"Policy\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"allow_camera\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"allow_wifi\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"allow_bluetooth\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"require_password\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"kiosk_mode\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"devicePolicies\",\"kind\":\"object\",\"type\":\"DevicePolicy\",\"relationName\":\"DevicePolicyToPolicy\"}],\"dbName\":\"policies\"},\"DevicePolicy\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"device_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"policy_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"applied_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"device\",\"kind\":\"object\",\"type\":\"Device\",\"relationName\":\"DeviceToDevicePolicy\"},{\"name\":\"policy\",\"kind\":\"object\",\"type\":\"Policy\",\"relationName\":\"DevicePolicyToPolicy\"}],\"dbName\":\"device_policies\"},\"Command\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"device_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"admin_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"command_type\",\"kind\":\"enum\",\"type\":\"CommandType\"},{\"name\":\"payload\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"CommandStatus\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"executed_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"device\",\"kind\":\"object\",\"type\":\"Device\",\"relationName\":\"CommandToDevice\"},{\"name\":\"admin\",\"kind\":\"object\",\"type\":\"Admin\",\"relationName\":\"AdminToCommand\"}],\"dbName\":\"commands\"},\"Log\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"device_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"admin_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"event_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"device\",\"kind\":\"object\",\"type\":\"Device\",\"relationName\":\"DeviceToLog\"},{\"name\":\"admin\",\"kind\":\"object\",\"type\":\"Admin\",\"relationName\":\"AdminToLog\"}],\"dbName\":\"logs\"},\"App\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"package_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"source\",\"kind\":\"enum\",\"type\":\"AppSource\"},{\"name\":\"download_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deviceApps\",\"kind\":\"object\",\"type\":\"DeviceApp\",\"relationName\":\"AppToDeviceApp\"}],\"dbName\":\"apps\"},\"DeviceApp\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"device_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"app_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"DeviceAppStatus\"},{\"name\":\"device\",\"kind\":\"object\",\"type\":\"Device\",\"relationName\":\"DeviceToDeviceApp\"},{\"name\":\"app\",\"kind\":\"object\",\"type\":\"App\",\"relationName\":\"AppToDeviceApp\"}],\"dbName\":\"device_apps\"},\"Group\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deviceGroups\",\"kind\":\"object\",\"type\":\"DeviceGroup\",\"relationName\":\"DeviceGroupToGroup\"}],\"dbName\":\"groups\"},\"DeviceGroup\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"device_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"group_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"device\",\"kind\":\"object\",\"type\":\"Device\",\"relationName\":\"DeviceToDeviceGroup\"},{\"name\":\"group\",\"kind\":\"object\",\"type\":\"Group\",\"relationName\":\"DeviceGroupToGroup\"}],\"dbName\":\"device_groups\"},\"Alert\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"device_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"alert_type\",\"kind\":\"enum\",\"type\":\"AlertType\"},{\"name\":\"severity\",\"kind\":\"enum\",\"type\":\"AlertSeverity\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"resolved\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"device\",\"kind\":\"object\",\"type\":\"Device\",\"relationName\":\"AlertToDevice\"}],\"dbName\":\"alerts\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

